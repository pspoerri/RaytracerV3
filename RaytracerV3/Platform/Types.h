/*!
    \file Types.h
    \brief Definitions of fixed-size integer types for various platforms
 
    Copyright (c) 2004-2006, Applied Informatics Software Engineering GmbH.
    and Contributors.
    
    Permission is hereby granted, free of charge, to any person or organization
    obtaining a copy of the software and accompanying documentation covered by
    this license (the "Software") to use, reproduce, display, distribute,
    execute, and transmit the Software, and to prepare derivative works of the
    Software, and to permit third-parties to whom the Software is furnished to
    do so, all subject to the following:
    
    The copyright notices in the Software and this entire statement, including
    the above license grant, this restriction and the following disclaimer,
    must be included in all copies of the Software, in whole or in part, and
    all derivative works of the Software, unless such copies or derivative
    works are solely in the form of machine-executable object code generated by
    a source language processor.
    
    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
    SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
    FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
    ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
    DEALINGS IN THE SOFTWARE.
*/
#ifndef PLATFORM_TYPES_H_INCLUDED
#define PLATFORM_TYPES_H_INCLUDED

#include "Fwd.h"

namespace Platform
{

#if defined(_MSC_VER)

    //
    // Windows/Visual C++
    //
    typedef signed char            Int8;
    typedef unsigned char          UInt8;
    typedef signed short           Int16;
    typedef unsigned short         UInt16;
    typedef signed int             Int32;
    typedef unsigned int           UInt32;
    typedef signed __int64         Int64;
    typedef unsigned __int64       UInt64;
    #if defined(_WIN64)
        #define PLATFORM_PTR_IS_64_BIT 1
        typedef signed __int64     IntPtr;
        typedef unsigned __int64   UIntPtr;
    #else
        typedef signed long        IntPtr;
        typedef unsigned long      UIntPtr;
    #endif
    #define PLATFORM_HAVE_INT64 1
    
#elif defined(__GNUC__)

    //
    // Unix/GCC
    //
    typedef signed char            Int8;
    typedef unsigned char          UInt8;
    typedef signed short           Int16;
    typedef unsigned short         UInt16;
    typedef signed int             Int32;
    typedef unsigned int           UInt32;
    typedef signed long            IntPtr;
    typedef unsigned long          UIntPtr;
    #if defined(__LP64__)
        #define PLATFORM_PTR_IS_64_BIT 1
        #define PLATFORM_LONG_IS_64_BIT 1
        typedef signed long        Int64;
        typedef unsigned long      UInt64;
    #else
        typedef signed long long   Int64;
        typedef unsigned long long UInt64;
    #endif
    #define PLATFORM_HAVE_INT64 1

#endif

} // namespace Platform


#endif // PLATFORM_TYPES_H_INCLUDED
